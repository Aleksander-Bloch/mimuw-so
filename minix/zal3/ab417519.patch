diff -rupNEZbB original/usr/include/minix/callnr.h solution/usr/include/minix/callnr.h
--- original/usr/include/minix/callnr.h	2014-09-14 11:00:44.000000000 +0200
+++ solution/usr/include/minix/callnr.h	2023-05-10 13:54:31.459931612 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_TRANSFER_MONEY  (PM_BASE + 48) // ab417519
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */ // ab417519
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB original/usr/include/minix/config.h solution/usr/include/minix/config.h
--- original/usr/include/minix/config.h	2014-09-14 11:00:44.000000000 +0200
+++ solution/usr/include/minix/config.h	2023-05-10 14:15:07.287894526 +0200
@@ -95,4 +95,8 @@
 #define NR_PCIBUS 40
 #define NR_PCIDEV 50
 
+/* ab417519 */
+#define INIT_BALANCE 100
+#define MAX_BALANCE 1000
+
 #endif /* _CONFIG_H */
diff -rupNEZbB original/usr/include/minix/ipc.h solution/usr/include/minix/ipc.h
--- original/usr/include/minix/ipc.h	2014-09-14 11:00:44.000000000 +0200
+++ solution/usr/include/minix/ipc.h	2023-05-10 14:07:23.007040252 +0200
@@ -2023,6 +2023,14 @@ typedef struct {
 } mess_vmmcp_reply;
 _ASSERT_MSG_SIZE(mess_vmmcp_reply);
 
+/* ab417519 */
+typedef struct {
+    pid_t recipient;
+    int amount;
+    uint8_t padding[48]
+} mess_money_transfer;
+_ASSERT_MSG_SIZE(mess_money_transfer);
+
 typedef struct {
 	endpoint_t m_source;		/* who sent the message */
 	int m_type;			/* what kind of message is it */
@@ -2251,6 +2259,7 @@ typedef struct {
 		mess_vm_vfs_mmap	m_vm_vfs_mmap;
 		mess_vmmcp		m_vmmcp;
 		mess_vmmcp_reply	m_vmmcp_reply;
+        mess_money_transfer m_money_transfer; // ab417519
 
 		u8_t size[56];	/* message payload may have 56 bytes at most */
 	};
diff -rupNEZbB original/usr/include/unistd.h solution/usr/include/unistd.h
--- original/usr/include/unistd.h	2014-09-14 11:00:43.000000000 +0200
+++ solution/usr/include/unistd.h	2023-05-10 15:08:18.819271499 +0200
@@ -143,6 +143,7 @@ int	 tcsetpgrp(int, pid_t);
 __aconst char *ttyname(int);
 int	 unlink(const char *);
 ssize_t	 write(int, const void *, size_t);
+int transfermoney(pid_t recipient, int amount); // ab417519
 
 
 /*
diff -rupNEZbB original/usr/src/include/unistd.h solution/usr/src/include/unistd.h
--- original/usr/src/include/unistd.h	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/include/unistd.h	2023-05-10 15:08:18.831271431 +0200
@@ -143,6 +143,7 @@ int	 tcsetpgrp(int, pid_t);
 __aconst char *ttyname(int);
 int	 unlink(const char *);
 ssize_t	 write(int, const void *, size_t);
+int transfermoney(pid_t recipient, int amount); // ab417519
 
 
 /*
diff -rupNEZbB original/usr/src/lib/libc/misc/Makefile.inc solution/usr/src/lib/libc/misc/Makefile.inc
--- original/usr/src/lib/libc/misc/Makefile.inc	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/lib/libc/misc/Makefile.inc	2023-05-10 15:16:53.640357938 +0200
@@ -7,4 +7,4 @@
 SRCS+=	initfini.c
 
 # for -fstack-protector
-SRCS+=	stack_protector.c
+SRCS+=	stack_protector.c transfermoney.c # ab417519
diff -rupNEZbB original/usr/src/lib/libc/misc/transfermoney.c solution/usr/src/lib/libc/misc/transfermoney.c
--- original/usr/src/lib/libc/misc/transfermoney.c	1970-01-01 01:00:00.000000000 +0100
+++ solution/usr/src/lib/libc/misc/transfermoney.c	2023-05-10 15:38:07.040487007 +0200
@@ -0,0 +1,24 @@
+/* ab417519 */
+#include <lib.h>
+#include <minix/rs.h>
+#include <string.h>
+
+int get_pm_endpt(endpoint_t *pt)
+{
+    return minix_rs_lookup("pm", pt);
+}
+
+int transfermoney(pid_t recipient, int amount)
+{
+    endpoint_t pm_pt;
+    message m;
+    memset(&m, 0, sizeof(m));
+    m.m_money_transfer.recipient = recipient;
+    m.m_money_transfer.amount = amount;
+    if (get_pm_endpt(&pm_pt) != 0)
+    {
+        errno = ENOSYS;
+        return -1;
+    }
+    return (_syscall(pm_pt, PM_TRANSFER_MONEY, &m));
+}
diff -rupNEZbB original/usr/src/minix/include/minix/callnr.h solution/usr/src/minix/include/minix/callnr.h
--- original/usr/src/minix/include/minix/callnr.h	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/include/minix/callnr.h	2023-05-10 13:54:31.431931807 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_TRANSFER_MONEY  (PM_BASE + 48) // ab417519
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */ // ab417519
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB original/usr/src/minix/include/minix/config.h solution/usr/src/minix/include/minix/config.h
--- original/usr/src/minix/include/minix/config.h	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/include/minix/config.h	2023-05-10 14:15:07.307894539 +0200
@@ -95,4 +95,8 @@
 #define NR_PCIBUS 40
 #define NR_PCIDEV 50
 
+/* ab417519 */
+#define INIT_BALANCE 100
+#define MAX_BALANCE 1000
+
 #endif /* _CONFIG_H */
diff -rupNEZbB original/usr/src/minix/include/minix/ipc.h solution/usr/src/minix/include/minix/ipc.h
--- original/usr/src/minix/include/minix/ipc.h	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/include/minix/ipc.h	2023-05-10 14:07:22.987040371 +0200
@@ -2023,6 +2023,14 @@ typedef struct {
 } mess_vmmcp_reply;
 _ASSERT_MSG_SIZE(mess_vmmcp_reply);
 
+/* ab417519 */
+typedef struct {
+    pid_t recipient;
+    int amount;
+    uint8_t padding[48]
+} mess_money_transfer;
+_ASSERT_MSG_SIZE(mess_money_transfer);
+
 typedef struct {
 	endpoint_t m_source;		/* who sent the message */
 	int m_type;			/* what kind of message is it */
@@ -2251,6 +2259,7 @@ typedef struct {
 		mess_vm_vfs_mmap	m_vm_vfs_mmap;
 		mess_vmmcp		m_vmmcp;
 		mess_vmmcp_reply	m_vmmcp_reply;
+        mess_money_transfer m_money_transfer; // ab417519
 
 		u8_t size[56];	/* message payload may have 56 bytes at most */
 	};
diff -rupNEZbB original/usr/src/minix/servers/pm/do_transfermoney.c solution/usr/src/minix/servers/pm/do_transfermoney.c
--- original/usr/src/minix/servers/pm/do_transfermoney.c	1970-01-01 01:00:00.000000000 +0100
+++ solution/usr/src/minix/servers/pm/do_transfermoney.c	2023-05-11 13:45:14.214155982 +0200
@@ -0,0 +1,45 @@
+/* ab417519 */
+#include <stdio.h>
+#include <minix/callnr.h>
+
+#include "pm.h"
+#include "mproc.h"
+
+static int is_descendant(struct mproc *rmp_descendant, pid_t ancestor) {
+    if (rmp_descendant->mp_pid == ancestor) {
+        return 0;
+    }
+    while (rmp_descendant->mp_pid != INIT_PID) {
+        rmp_descendant = &mproc[rmp_descendant->mp_parent];
+        if (rmp_descendant->mp_pid == ancestor) {
+            return 1;
+        }
+    }
+    return 0;
+}
+
+int do_transfermoney(void) {
+    pid_t recipient = m_in.m_money_transfer.recipient;
+    int amount = m_in.m_money_transfer.amount;
+
+    struct mproc *rmp_recipient = find_proc(recipient);
+    if (rmp_recipient == NULL) {
+        return ESRCH;
+    }
+
+    struct mproc *rmp_transferrer = mp;
+    pid_t transferrer = rmp_transferrer->mp_pid;
+
+    if (is_descendant(rmp_transferrer, recipient) || is_descendant(rmp_recipient, transferrer)) {
+        return EPERM;
+    }
+    if (amount < 0 || rmp_transferrer->mp_account_balance < amount ||
+        rmp_recipient->mp_account_balance > MAX_BALANCE - amount) {
+        return EINVAL;
+    }
+
+    rmp_recipient->mp_account_balance += amount;
+    rmp_transferrer->mp_account_balance -= amount;
+
+    return rmp_transferrer->mp_account_balance;
+}
diff -rupNEZbB original/usr/src/minix/servers/pm/forkexit.c solution/usr/src/minix/servers/pm/forkexit.c
--- original/usr/src/minix/servers/pm/forkexit.c	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/servers/pm/forkexit.c	2023-05-11 13:45:14.238155852 +0200
@@ -112,6 +112,7 @@ int do_fork()
   /* Find a free pid for the child and put it in the table. */
   new_pid = get_free_pid();
   rmc->mp_pid = new_pid;	/* assign pid to child */
+  rmc->mp_account_balance = INIT_BALANCE; // ab417519
 
   memset(&m, 0, sizeof(m));
   m.m_type = VFS_PM_FORK;
@@ -204,6 +205,7 @@ int do_srv_fork()
   /* Find a free pid for the child and put it in the table. */
   new_pid = get_free_pid();
   rmc->mp_pid = new_pid;	/* assign pid to child */
+  rmc->mp_account_balance = INIT_BALANCE; // ab417519
 
   memset(&m, 0, sizeof(m));
   m.m_type = VFS_PM_SRV_FORK;
diff -rupNEZbB original/usr/src/minix/servers/pm/main.c solution/usr/src/minix/servers/pm/main.c
--- original/usr/src/minix/servers/pm/main.c	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/servers/pm/main.c	2023-05-11 13:45:14.230155895 +0200
@@ -147,6 +147,7 @@ static int sef_cb_init_fresh(int UNUSED(
   for (rmp=&mproc[0]; rmp<&mproc[NR_PROCS]; rmp++) {
 	init_timer(&rmp->mp_timer);
 	rmp->mp_magic = MP_MAGIC;
+    rmp->mp_account_balance = INIT_BALANCE; // ab417519
   }
 
   /* Build the set of signals which cause core dumps, and the set of signals
diff -rupNEZbB original/usr/src/minix/servers/pm/Makefile solution/usr/src/minix/servers/pm/Makefile
--- original/usr/src/minix/servers/pm/Makefile	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/servers/pm/Makefile	2023-05-10 13:59:58.305769445 +0200
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c do_transfermoney.c # ab417519
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
diff -rupNEZbB original/usr/src/minix/servers/pm/mproc.h solution/usr/src/minix/servers/pm/mproc.h
--- original/usr/src/minix/servers/pm/mproc.h	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/servers/pm/mproc.h	2023-05-10 14:41:09.759526240 +0200
@@ -70,6 +70,7 @@ EXTERN struct mproc {
   char mp_name[PROC_NAME_LEN];	/* process name */
 
   int mp_magic;			/* sanity check, MP_MAGIC */
+  int mp_account_balance; // ab417519
 } mproc[NR_PROCS];
 
 /* Flag values */
diff -rupNEZbB original/usr/src/minix/servers/pm/proto.h solution/usr/src/minix/servers/pm/proto.h
--- original/usr/src/minix/servers/pm/proto.h	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/servers/pm/proto.h	2023-05-10 16:00:31.998218381 +0200
@@ -3,6 +3,7 @@
 struct mproc;
 
 #include <minix/timers.h>
+#include <minix/ipc.h>
 
 /* alarm.c */
 int do_itimer(void);
@@ -89,3 +90,6 @@ struct mproc *find_proc(pid_t lpid);
 int nice_to_priority(int nice, unsigned *new_q);
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
+
+/* do_transfermoney.c */
+int do_transfermoney(void); // ab417519
diff -rupNEZbB original/usr/src/minix/servers/pm/table.c solution/usr/src/minix/servers/pm/table.c
--- original/usr/src/minix/servers/pm/table.c	2014-09-13 23:56:50.000000000 +0200
+++ solution/usr/src/minix/servers/pm/table.c	2023-05-10 14:01:53.157047495 +0200
@@ -58,5 +58,6 @@ int (* const call_vec[NR_PM_CALLS])(void
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo		/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,		/* getsysinfo(2) */
+    CALL(PM_TRANSFER_MONEY) = do_transfermoney, /* transfermoney(2) */ // ab417519
 };
